--by red_chan_is_real
--// D·ªãch v·ª• c·∫ßn thi·∫øt
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

--// UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

--// Khung ch·ªçn ng∆∞·ªùi ch∆°i
local Dropdown = Instance.new("Frame")
Dropdown.Parent = ScreenGui
Dropdown.Size = UDim2.new(0, 150, 0, 90)
Dropdown.Position = UDim2.new(0.05, 0, 0.1, 0)
Dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

local PlayerSelect = Instance.new("TextButton")
PlayerSelect.Parent = Dropdown
PlayerSelect.Size = UDim2.new(1, 0, 0, 40)
PlayerSelect.Text = "Ch·ªçn ng∆∞·ªùi ch∆°i"
PlayerSelect.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
PlayerSelect.TextColor3 = Color3.fromRGB(255, 255, 255)

local PlayerList = Instance.new("ScrollingFrame")
PlayerList.Parent = Dropdown
PlayerList.Size = UDim2.new(1, 0, 1, -40)
PlayerList.Position = UDim2.new(0, 0, 0, 40)
PlayerList.BackgroundTransparency = 1
PlayerList.Visible = false
PlayerList.CanvasSize = UDim2.new(0, 0, 0, 200)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = PlayerList
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

--// N√∫t Fly
local FlyButton = Instance.new("TextButton")
FlyButton.Parent = ScreenGui
FlyButton.Size = UDim2.new(0, 150, 0, 40)
FlyButton.Position = UDim2.new(0.05, 0, 0.35, 0)
FlyButton.Text = "Fly to Player"

--// Thanh ch·ªânh t·ªëc ƒë·ªô
local SpeedSlider = Instance.new("TextBox")
SpeedSlider.Parent = ScreenGui
SpeedSlider.Size = UDim2.new(0, 150, 0, 40)
SpeedSlider.Position = UDim2.new(0.05, 0, 0.45, 0)
SpeedSlider.Text = "Speed: 3"

--// N√∫t NoClip
local NoClipButton = Instance.new("TextButton")
NoClipButton.Parent = ScreenGui
NoClipButton.Size = UDim2.new(0, 150, 0, 40)
NoClipButton.Position = UDim2.new(0.05, 0, 0.55, 0)
NoClipButton.Text = "NoClip: OFF"

--// N√∫t Aimbot
local AimbotButton = Instance.new("TextButton")
AimbotButton.Parent = ScreenGui
AimbotButton.Size = UDim2.new(0, 150, 0, 40)
AimbotButton.Position = UDim2.new(0.05, 0, 0.65, 0)
AimbotButton.Text = "Aimbot: OFF"

--// Bi·∫øn l∆∞u tr·ªØ
local selectedPlayer = nil
local flySpeed = 3
local flying = false
local heightOffset = 10
local aimbotEnabled = false
local noClipEnabled = false
local flyConnection = nil
local aimbotConnection = nil
local noClipConnection = nil

--// C·∫≠p nh·∫≠t danh s√°ch ng∆∞·ªùi ch∆°i
local function UpdatePlayerList()
    for _, child in pairs(PlayerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local PlayerButton = Instance.new("TextButton")
            PlayerButton.Parent = PlayerList
            PlayerButton.Size = UDim2.new(1, 0, 0, 30)
            PlayerButton.Text = player.Name

            PlayerButton.MouseButton1Click:Connect(function()
                selectedPlayer = player
                PlayerSelect.Text = "‚ñ∂ " .. player.Name
                PlayerList.Visible = false
            end)
        end
    end
end

PlayerSelect.MouseButton1Click:Connect(function()
    PlayerList.Visible = not PlayerList.Visible
    UpdatePlayerList()
end)

SpeedSlider.FocusLost:Connect(function()
    local newSpeed = tonumber(SpeedSlider.Text:match("%d+"))
    if newSpeed and newSpeed > 0 then
        flySpeed = newSpeed
        SpeedSlider.Text = "Speed: " .. flySpeed
    else
        SpeedSlider.Text = "Speed: " .. flySpeed
    end
end)

--// NoClip
local function EnableNoClip()
    noClipEnabled = true
    NoClipButton.Text = "NoClip: ON"
    noClipConnection = RunService.Stepped:Connect(function()
        for _, part in pairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end)
end

local function DisableNoClip()
    noClipEnabled = false
    NoClipButton.Text = "NoClip: OFF"
    if noClipConnection then
        noClipConnection:Disconnect()
        noClipConnection = nil
    end
end

--// Bay
local function FlyToPlayer()
    if flying then
        flying = false
        DisableNoClip()
        if flyConnection then
            flyConnection:Disconnect()
            flyConnection = nil
        end
        return
    end

    if selectedPlayer and selectedPlayer.Character then
        local targetHRP = selectedPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            flying = true
            EnableNoClip()
            flyConnection = RunService.RenderStepped:Connect(function(deltaTime)
                local direction = (targetHRP.Position - HumanoidRootPart.Position).unit
                local moveDistance = flySpeed * deltaTime
                local newPosition = HumanoidRootPart.Position + direction * moveDistance
                newPosition = Vector3.new(newPosition.X, targetHRP.Position.Y + heightOffset, newPosition.Z)

                HumanoidRootPart.Velocity = Vector3.zero
                HumanoidRootPart.CFrame = CFrame.new(newPosition, targetHRP.Position)
            end)
        end
    end
end

FlyButton.MouseButton1Click:Connect(FlyToPlayer)

--// Aimbot
AimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    AimbotButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
end)

RunService.RenderStepped:Connect(function()
    if aimbotEnabled and selectedPlayer and selectedPlayer.Character then
        local targetHRP = selectedPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            game.Workspace.CurrentCamera.CFrame = CFrame.new(game.Workspace.CurrentCamera.CFrame.Position, targetHRP.Position)
        end
    end
end)

local module = {
    NextAttack = 0,
    AttackCooldown = 1, -- Th·ªùi gian ch·ªù gi·ªØa c√°c ƒë√≤n ƒë√°nh
    Distance = 55,
    attackMobs = true,
    attackPlayers = true
}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

function module:GetBladeHits()
    local BladeHits = {}
    local LocalPlayer = Players.LocalPlayer
    local PlayerCharacter = LocalPlayer and LocalPlayer.Character

    if not PlayerCharacter or not PlayerCharacter:FindFirstChild("HumanoidRootPart") then
        return BladeHits
    end

    local PlayerRoot = PlayerCharacter.HumanoidRootPart

    -- üü¢ **T·∫•n c√¥ng k·∫ª ƒë·ªãch (Mobs)**
    if module.attackMobs then
        for _, Enemy in Workspace.Enemies:GetChildren() do
            if Enemy:FindFirstChild("HumanoidRootPart") and Enemy:FindFirstChild("Humanoid") then
                local RootPart = Enemy.HumanoidRootPart
                local Humanoid = Enemy.Humanoid

                if (PlayerRoot.Position - RootPart.Position).Magnitude <= module.Distance and Humanoid.Health > 0 then
                    table.insert(BladeHits, RootPart)
                end
            end
        end
    end

    -- üî¥ **T·∫•n c√¥ng ng∆∞·ªùi ch∆°i kh√°c**
    if module.attackPlayers then
        for _, Player in Players:GetPlayers() do
            if Player ~= LocalPlayer and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                local RootPart = Player.Character.HumanoidRootPart
                local Humanoid = Player.Character:FindFirstChild("Humanoid")

                if Humanoid and Humanoid.Health > 0 and (PlayerRoot.Position - RootPart.Position).Magnitude <= module.Distance then
                    table.insert(BladeHits, RootPart)
                end
            end
        end
    end

    return BladeHits
end

function module:attack()
    local CurrentTime = tick()
    if CurrentTime - module.NextAttack >= module.AttackCooldown then
        module.NextAttack = CurrentTime
        
        local BladeHits = self:GetBladeHits()

        -- G·ª≠i l·ªánh t·∫•n c√¥ng
        ReplicatedStorage.Modules.Net:WaitForChild("RE/RegisterAttack"):FireServer(0)

        -- G·ª≠i l·ªánh ƒë√°nh t·ª´ng m·ª•c ti√™u h·ª£p l·ªá
        for _, Hit in BladeHits do
            ReplicatedStorage.Modules.Net:WaitForChild("RE/RegisterHit"):FireServer(Hit)
        end
    end
end

-- S·ª≠ d·ª•ng RunService ƒë·ªÉ t·ªëi ∆∞u thay v√¨ spawn()
RunService.RenderStepped:Connect(function()
    module:attack()
end)

--// D·ªãch v·ª• c·∫ßn thi·∫øt
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

--// Bi·∫øn l∆∞u tr·ªØ
local isFlyingUp = false
local flightSpeed = 325 -- T·ªëc ƒë·ªô bay l√™n
local flyConnection = nil

--// H√†m bay l√™n v√¥ h·∫°n khi m√°u th·∫•p
local function StartFlyingUp()
    if isFlyingUp then return end
    isFlyingUp = true

    flyConnection = RunService.RenderStepped:Connect(function()
        if isFlyingUp and Humanoid and HumanoidRootPart then
            -- Bay l√™n li√™n t·ª•c theo tr·ª•c Y
            HumanoidRootPart.Velocity = Vector3.new(0, flightSpeed, 0)
        end
    end)
end

--// H√†m gi·ªØ nguy√™n ƒë·ªô cao khi m√°u h·ªìi ph·ª•c
local function StopFlyingUp()
    if not isFlyingUp then return end
    isFlyingUp = false

    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end

    -- Gi·ªØ nguy√™n ƒë·ªô cao, kh√¥ng r∆°i xu·ªëng
    HumanoidRootPart.Velocity = Vector3.zero
end

--// Khi m√°u thay ƒë·ªïi, ki·ªÉm tra v√† bay l√™n n·∫øu c·∫ßn
Humanoid.HealthChanged:Connect(function(health)
    local maxHealth = Humanoid.MaxHealth
    local healthPercentage = (health / maxHealth) * 100

    if healthPercentage <= 40 then
        StartFlyingUp()
    elseif healthPercentage >= 85 then
        StopFlyingUp()
    end
end)

--// Khi nh√¢n v·∫≠t respawn, ƒë·∫£m b·∫£o h·ªá th·ªëng ho·∫°t ƒë·ªông l·∫°i
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

    -- Ki·ªÉm tra m√°u l·∫°i khi respawn
    Humanoid.HealthChanged:Connect(function(health)
        local maxHealth = Humanoid.MaxHealth
        local healthPercentage = (health / maxHealth) * 100

        if healthPercentage <= 40 then
            StartFlyingUp()
        elseif healthPercentage >= 100 then
            StopFlyingUp()
        end
    end)
end)


--// Khi nh√¢n v·∫≠t m·ªõi xu·∫•t hi·ªán (t·ª©c l√† sau khi ch·∫øt)
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

    -- N·∫øu NoClip ƒë√£ b·∫≠t tr∆∞·ªõc khi ch·∫øt, t·ª± ƒë·ªông b·∫≠t l·∫°i
    if noClipEnabled then
        EnableNoClip()
    end
end)

--// H√†m c·∫≠p nh·∫≠t nh√¢n v·∫≠t sau khi ch·∫øt
local function UpdateCharacter()
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
end

--// K·∫øt n·ªëi s·ª± ki·ªán khi nh√¢n v·∫≠t respawn
LocalPlayer.CharacterAdded:Connect(UpdateCharacter)
Players.PlayerAdded:Connect(UpdatePlayerList)
Players.PlayerRemoving:Connect(UpdatePlayerList)
UpdatePlayerList()

--// C·∫≠p nh·∫≠t nh√¢n v·∫≠t l·∫ßn ƒë·∫ßu khi ch·∫°y code
UpdateCharacter()

Players.PlayerAdded:Connect(UpdatePlayerList)
Players.PlayerRemoving:Connect(UpdatePlayerList)
UpdatePlayerList()
--// C·∫≠p nh·∫≠t nh√¢n v·∫≠t l·∫ßn ƒë·∫ßu khi ch·∫°y code
UpdateCharacter()
